/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package frames.components;

import data.model.ServiceCredit;
import frames.listener.ServiceCreditItemListener;
import java.awt.Color;
import themes.Theme;

/**
 *
 * @author root
 */
public class ServiceCreditItem extends javax.swing.JPanel {

    /**
     * Creates new form ServiceCreditItem
     */
    
    private final ServiceCredit serviceCredit;
    private final int index;
    private final ServiceCreditItemListener listener;
    
    
    public ServiceCreditItem(int index, ServiceCredit serviceCredit,ServiceCreditItemListener listener) {
        initComponents();
        
        this.serviceCredit = serviceCredit;
        this.index = index;
        this.listener =listener;
        
        setDisplay();
    }
    
    private void setDisplay(){
        lbl1.setText(" "+serviceCredit.getOrderNo());
        lbl2.setText("  "+serviceCredit.getMemorandum());
        //lbl2.setText("<html>For me, the layout is wrong every other time when I decrease the window; increasing works better but if it goes wrong, it's also incorrect every other time. I tried debugging and printing values to console; it seems that view.getLayout().preferredLayoutSize( view ) depends not only on view.setPreferredSize but also on the current size of the panel and scrollpane. The code of GridBagLayout is too complicated to dive into.</html>");
        
        if(index%2==1){
            this.setBackground(Theme.PRIMARY.COLOR.background_secondary);
           
        }else{
            this.setBackground(new Color(204, 230, 192));
            
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl1 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();

        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        setLayout(new java.awt.BorderLayout());

        lbl1.setFont(Theme.PRIMARY.FONT.tableFontDefault(12)
        );
        lbl1.setText("Order No");
        lbl1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 1, new java.awt.Color(153, 153, 153)));
        lbl1.setMaximumSize(new java.awt.Dimension(130, 40));
        lbl1.setMinimumSize(new java.awt.Dimension(130, 40));
        lbl1.setPreferredSize(new java.awt.Dimension(130, 40));
        add(lbl1, java.awt.BorderLayout.WEST);

        lbl2.setFont(Theme.PRIMARY.FONT.tableFontDefault(12)
        );
        lbl2.setText("For me, the layout is wrong every other time when I decrease the window; increasing works better but if it goes wrong, it's also incorrect every other time. I tried debugging and printing values to console; it seems that view.getLayout().preferredLayoutSize( view ) depends not only on view.setPreferredSize but also on the current size of the panel and scrollpane. The code of GridBagLayout is too complicated to dive into.");
        add(lbl2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
       this.listener.setDetails(serviceCredit);
    }//GEN-LAST:event_formMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    // End of variables declaration//GEN-END:variables
}
